{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useForecast = () => {\n  _s();\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  const [city, setCity] = useState();\n  const [forecast, setForecast] = useState(null);\n  const getOptions = value => {\n    fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${value}&limit=5&appid=${process.env.REACT_APP_API_KEY}`).then(response => response.json()).then(data => {\n      setOptions(data);\n    }).catch(err => console.log(err + 'err'));\n  };\n  const getForecast = option => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${option.lat}&lon=${option.lon}&exclude={part}&appid=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(data => {\n      const forecastData = {\n        ...data.city,\n        list: data.list\n      };\n      setForecast(data);\n    });\n  };\n  const searchHandler = e => {\n    setSearch(e.target.value);\n    if (e.target.value === '') return;\n    getOptions(e.target.value);\n  };\n  const setOptionsData = option => {\n    setCity(option);\n  };\n  const onSubmit = () => {\n    if (!city) return;\n    getForecast(city);\n  };\n  useEffect(() => {\n    if (city) {\n      setSearch(city.name);\n      setOptions([]);\n    }\n  }, [city]);\n  return {\n    search,\n    options,\n    forecast,\n    onSubmit,\n    getOptions,\n    searchHandler,\n    setOptionsData\n  };\n};\n_s(useForecast, \"rYdqnYBFzrSctXc/uNNQYCM/xgw=\");\nexport default useForecast;","map":{"version":3,"names":["useState","useEffect","useForecast","_s","search","setSearch","options","setOptions","city","setCity","forecast","setForecast","getOptions","value","fetch","process","env","REACT_APP_API_KEY","then","response","json","data","catch","err","console","log","getForecast","option","lat","lon","res","forecastData","list","searchHandler","e","target","setOptionsData","onSubmit","name"],"sources":["/Users/victorhachkajlo/Documents/the-ultimate-api-challenge-weather-api-typescript/starter-files/src/components/useForecast.ts"],"sourcesContent":["import React from 'react'\nimport { useState, ChangeEvent, useEffect } from 'react'\nimport { forecastType, optionType } from '../types'\n\nconst useForecast = () => {\n  const [search, setSearch] = useState<string>('')\n  const [options, setOptions] = useState<[]>([])\n  const [city, setCity] = useState<optionType | null>()\n  const [forecast, setForecast] = useState<forecastType | null>(null)\n  const getOptions = (value: string) => {\n    fetch(\n      `http://api.openweathermap.org/geo/1.0/direct?q=${value}&limit=5&appid=${process.env.REACT_APP_API_KEY}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setOptions(data)\n      })\n      .catch((err) => console.log(err + 'err'))\n  }\n  const getForecast = (option: optionType) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${option.lat}&lon=${option.lon}&exclude={part}&appid=${process.env.REACT_APP_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const forecastData = {\n          ...data.city,\n          list:data.list\n        }\n        setForecast(data)\n      })\n  }\n\n  const searchHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n    if (e.target.value === '') return\n    getOptions(e.target.value)\n  }\n  const setOptionsData = (option: optionType) => {\n    setCity(option)\n  }\n  const onSubmit = () => {\n    if (!city) return\n    getForecast(city)\n  }\n  useEffect(() => {\n    if (city) {\n      setSearch(city.name)\n\n      setOptions([])\n    }\n  }, [city])\n  return {\n    search,\n    options,\n    forecast,\n    onSubmit,\n    getOptions,\n    searchHandler,\n    setOptionsData,\n  }\n}\n\nexport default useForecast\n"],"mappings":";AACA,SAASA,QAAQ,EAAeC,SAAS,QAAQ,OAAO;AAGxD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAK,EAAE,CAAC;EAC9C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAoB,CAAC;EACrD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAsB,IAAI,CAAC;EACnE,MAAMY,UAAU,GAAIC,KAAa,IAAK;IACpCC,KAAK,CACF,kDAAiDD,KAAM,kBAAiBE,OAAO,CAACC,GAAG,CAACC,iBAAkB,EACzG,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdd,UAAU,CAACc,IAAI,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,GAAG,KAAK,CAAC,CAAC;EAC7C,CAAC;EACD,MAAMG,WAAW,GAAIC,MAAkB,IAAK;IAC1Cb,KAAK,CACF,wDAAuDa,MAAM,CAACC,GAAI,QAAOD,MAAM,CAACE,GAAI,yBAAwBd,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAC7I,CAAC,CACEC,IAAI,CAAEY,GAAG,IAAKA,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMU,YAAY,GAAG;QACnB,GAAGV,IAAI,CAACb,IAAI;QACZwB,IAAI,EAACX,IAAI,CAACW;MACZ,CAAC;MACDrB,WAAW,CAACU,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMY,aAAa,GAAIC,CAAgC,IAAK;IAC1D7B,SAAS,CAAC6B,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;IACzB,IAAIqB,CAAC,CAACC,MAAM,CAACtB,KAAK,KAAK,EAAE,EAAE;IAC3BD,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;EAC5B,CAAC;EACD,MAAMuB,cAAc,GAAIT,MAAkB,IAAK;IAC7ClB,OAAO,CAACkB,MAAM,CAAC;EACjB,CAAC;EACD,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAAC7B,IAAI,EAAE;IACXkB,WAAW,CAAClB,IAAI,CAAC;EACnB,CAAC;EACDP,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRH,SAAS,CAACG,IAAI,CAAC8B,IAAI,CAAC;MAEpB/B,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EACV,OAAO;IACLJ,MAAM;IACNE,OAAO;IACPI,QAAQ;IACR2B,QAAQ;IACRzB,UAAU;IACVqB,aAAa;IACbG;EACF,CAAC;AACH,CAAC;AAAAjC,EAAA,CAzDKD,WAAW;AA2DjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}